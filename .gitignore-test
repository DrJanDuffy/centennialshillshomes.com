# Test: Git Deployment Workflow Rule (Auto Attached to .gitignore, .github/workflows/*.yml, package.json)
# This should demonstrate proper git ignore patterns and deployment workflow

# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*

# Build outputs
dist/
build/
.next/
out/

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Logs
logs/
*.log

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output/

# Dependency directories
jspm_packages/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Vercel
.vercel

# TypeScript
*.tsbuildinfo

# Temporary folders
tmp/
temp/

# Test files (keep test files but ignore test outputs)
test-results/
playwright-report/
test-results.xml

# Real estate specific ignores
# Property images (if stored locally)
/property-images/
/uploads/

# MLS data exports
/mls-exports/
*.csv
*.xlsx

# Backup files
*.backup
*.bak

# Deployment artifacts
deployment-logs/
build-artifacts/
